package com.conecel.asyncdatabase.entity;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import lombok.Data;

@Data
@Entity
@Table(name = "CR_SOLICITUDES", schema = "CREDITENGINE")
public class Request implements Serializable {
	
	
	private static final long serialVersionUID = 1L;
	@Id
	@Column(name = "ID_SOLICITUD")
	private BigDecimal requestId;
	@Column(name = "COMPANIA")
	private String company;
	@Column(name = "REGION")
	private String region;
	@Column(name = "CANAL")
	private String channelId;
	@Column(name="TIPO_CANAL")
	private String channelType;
	@Column(name = "TIPO_IDENTIFICACION")
	private String identificationType;
	@Column(name = "NUMERO_IDENTIFICACION")
	private String identificationNumber;
	@Column(name = "NOMBRES")
	private String fullName;
	@Column(name = "PRIMER_APELLIDO")
	private String lastName;
	@Column(name = "FECHA_NACIMIENTO")
	private Date birthday;
	@Column(name = "ESTADO_CIVIL")
	private String marriedStatus;
	@Column(name = "GENERO")
	private String sex;
	@Column(name = "FINANCIAMIENTO")
	private String finance;
	@Column(name = "CUENTA_ONE")
	private String accountId;
	@Column(name = "ANTIGUEDAD_LINEA")
	private Integer lineAge;
	@Column(name = "NUMERO_RECARGAS")
	private Double rechargeNumber;
	@Column(name = "SEGUNDO_APELLIDO")
	private String secondLastName;
	@OneToMany(cascade = CascadeType.ALL)
	@JoinColumn(name="ID_SOLICITUD")
	private List<Contact> contacts;
	@OneToMany(cascade = CascadeType.ALL)
	@JoinColumn(name="ID_SOLICITUD")
	private List<Address> address;
	@OneToMany(cascade = CascadeType.ALL)
	@JoinColumn(name="ID_SOLICITUD")
	private List<Offering> offers;
	@Column(name = "TIPO_FORMA_PAGO")
	private String paymentMethodType;
	@Column(name = "TIPO_TARJETA_BANCARIA")
	private String cardType;
	@Column(name = "NUMERO_TARJETA_BANCARIA")
	private String cardNumber;
	@Column(name = "FECHA_EXPIRACION_TARJ_BAN")
	private String bankAccountExpiryTime;
	@Column(name = "CVV_TARJETA_BANCARIA")
	private String cvvNumber;
	@ManyToOne(cascade = CascadeType.ALL)
	@JoinColumn(name="ID_INFORMACION_LABORAL")
	private WorkInformation workInfo;
	@Column(name = "NUMERO_SERVICIO")
	private String serviceNumber;
	@Column(name = "MONTO_TOTAL")
	private String totalAmount;
	@ManyToOne(cascade = CascadeType.ALL)
	@JoinColumn(name="ID_TIPO_CLIENTE_SOLICITUD")
	private ClientTypeRequest clientTypeRequest;
	@OneToMany(cascade = CascadeType.ALL)
	@JoinColumn(name="ID_SOLICITUD")
	private List<WhiteList> whiteLists;
	@OneToMany(cascade = CascadeType.ALL)
    @JoinColumn(name="ID_SOLICITUD")
    private List<BlackList> blackLists;
	@OneToMany(cascade = CascadeType.ALL)
	@JoinColumn(name="ID_SOLICITUD")
	private List<Debt> debts;
	@ManyToOne(cascade = CascadeType.ALL)
	@JoinColumn(name="ID_CUENTA")
	private Account account;
	@OneToMany(cascade = CascadeType.ALL)
	@JoinColumn(name = "ID_SOLICITUD")
	private List<PaymentMethod> paymentMethod;
	@OneToMany(cascade = CascadeType.ALL)
	@JoinColumn(name="ID_SOLICITUD")
	private List<Financing> financing;
	@ManyToOne(cascade = CascadeType.ALL)
	@JoinColumn(name="ID_MONTO_MAXIMO")
	private MaxAmountFinancing maxAmountFinancing;
	@OneToMany(cascade = CascadeType.ALL)
	@JoinColumn(name="ID_SOLICITUD")
	private List<RescueOption> rescueOptions;
	@ManyToOne(cascade = CascadeType.ALL)
	@JoinColumn(name="ID_PORTABILIDAD")
	private Portability portability;
	@Column(name = "TIPO_TRANSACCION")
	private String transactionType;
	@Column(name = "CODIGO_RESPUESTA")
	private Integer responseCode;
	@Column(name = "MENSAJE_DESCRIPCION")
	private String messageDescription;
	@Column(name = "RETRASO_ACTIVACION")
	private String delayActivation;
	@Column(name = "MONTO_DEPOSITADO")
	private Double depositAmount;
	@Column(name = "ESTADO_SOLICITUD")
	private String requestStatus;
	@Column(name = "ESTADO_REGISTRO_SOLICITUD")
	private String registerStatusRequest;
	@Column(name = "FECHA_REGISTRO_SOLICITUD")
	private Date registerDateRequest;
	@Column(name = "FECHA_EXPIRACION_SOLICITUD")
	private Date requestExpirationDate;
	@Column(name = "OBSERVACION")
	private String observation;
	@ManyToOne(cascade = CascadeType.ALL)
	@JoinColumn(name = "ID_CUPO")
	private Quota quota;
	@Column(name = "ANALISTA_ASIGNADO")
	private String assignAnalyst;
	@Column(name="USUARIO_CRM")
	private String crmUser;
	@Column(name="TIPO_APROBACION")
	private String approvalType;
	@Column(name="CANTIDAD_SOLICITUDES")
	private Integer requestsAmount;
	@Column(name="RIESGO")
	private String levelRisk;
	@Column(name="TIPO_SOLICITUD")
	private String requestType;
	@Column(name="ID_EMPLEADO")
	private String employeeId;
	@Column(name="CODIGO_EMPLEADO")
	private String employeeCode;
	@ManyToOne(cascade = CascadeType.ALL)
	@JoinColumn(name = "ID_BURO")
	private Buro buro;
	@OneToMany(cascade = CascadeType.ALL)
	@JoinColumn(name = "ID_SOLICITUD")
	private List<CreditLevel> approvals;
	@Column(name="ANALISTA_RESOLUCION")
	private String resolutionAnalyst;
	@Column(name="DESBLOQUEO")
	private String unlock;
	@Column(name="OBSERVACION_DESBLOQUEO")
	private String unlockObservation;
	@Column(name="MOTIVO_DESBLOQUEO")
	private String reasonUnlock;
	@Column(name="MOTIVO_BLOQUEO")
	private String lockReason;
	@Column(name="ANALISTA_DESBLOQUEO")
	private String unlockAnalyst;
	@Column(name="MOTIVO_LISTA_NEGRA")
	private String reasonBlackList;
	@OneToMany(cascade = CascadeType.ALL)
	@JoinColumn(name = "ID_SOLICITUD")
	private List<CreditEngine> creditEngine;
	@Column(name="ID_SUBPRODUCTO")
	private String subProductId;
	@Column(name="NOTIFICACION")
	private Boolean notification;
	@Column(name="MIGRACION")
	private Boolean migration;
	@Column(name="CODIGO_NEGOCIO")
	private String businessCode;
	@Column(name="NUMERO_NEGOCIO")
	private String businessSerialNo;
	@OneToMany(cascade = CascadeType.ALL)
	@JoinColumn(name = "ID_SOLICITUD")
	private List<ClaroAccount> claroAccount;
	@OneToMany(cascade = CascadeType.ALL)
	@JoinColumn(name = "ID_SOLICITUD")
	private List<Lock> lock;
	@Column(name="TARIFA_BASICA")
	private Double basicRate;
	@Column(name="TIEMPO_CARTA_RESPONSABILIDAD")
	private String validityLetterResponsability;
	@Column(name="MOTIVO_CARTA_RESPONSABILIDAD")
	private String reasonResponsabilityLetter;
	@Column(name="OPERACION_MANUAL")
	private String operatorCheck;
	@Column(name="OFICINA")
	private String orgId;
	@Column(name="FECHA_MODIFICACION")
	private Date modificationDate;
	@Column(name="BANDERA_GARANTIA")
	private String guarantyFlag;
	@Column(name="TIPO_IDENTIFICACION_ACTUAL")
	private String currentIdentificationType;
	@Column(name="NUMERO_IDENTIFICACION_ACTUAL")
	private String currentIdentificationNumber;
	@Column(name="NOMBRES_ACTUAL")
	private String currentFullName;
	@Column(name="FORMA_PAGO_ACTUAL")
	private String currentPaymentMethod;
	@Column(name="TARIFA_BASICA_ACTUAL")
	private Double currentBasicRate;
	@Column(name="FINANCIAMIENTO_ACTIVO")
	private Double activeFinancing;
	@Column(name="FINANCIAMIENTO_SOLICITADO")
	private Double requestFinancing;
	@Column(name="FINANCIAMIENTO_TOTAL")
	private Double totalFinancing;
	@Column(name="CUOTA_FINANCIAMIENTO")
	private Double financingQuota;
	@Column(name="PLAZO_FINANCIAMIENTO")
	private Double financingTime;
	@Column(name="RIESGO_TOTAL_MENSUAL")
	private Double totalMonthlyRisk;
	@Column(name="TOTAL_RIESGO_ACTIVO_MENSUAL")
	private Double totalMonthlyActiveRisk;
	@Column(name="TOTAL_RIESGO_SOLICITADO")
	private Double totalRequestRisk;
	@Column(name="ANALISTA_BLOQUEADO")
	private String assignmentLock;
	@Column(name="ROL_ASIGNADO")
	private String assignmentRol;
	@ManyToOne(cascade = CascadeType.ALL)
	@JoinColumn(name="ID_APROBACION_CARTA")
	private ApprovalLetters approvalLetter;
	@Column(name="ID_TRX_CANCELADA")
	private String cancelledTransactionId;
	@Transient
	private Boolean mailFlag;
	@Transient
	private String msaServiceSave;
	@OneToOne(cascade = CascadeType.ALL)
	@JoinColumn(name="ID_TERCERO")
	private ThirdAccount thirdAccount;
	@Column(name="PAGO_ANTICIPADO")
    private String paymentPrepaid;
	
	
	

}